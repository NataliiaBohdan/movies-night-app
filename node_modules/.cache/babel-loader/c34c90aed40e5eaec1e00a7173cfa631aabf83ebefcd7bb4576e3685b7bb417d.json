{"ast":null,"code":"var _jsxFileName = \"/Users/nataliia/Desktop/MoviesNight/movies-night/src/components/MoviesList.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { QueryContext } from \"../context/QueryContext\";\nimport { useMovies } from \"../hook/useMovies\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviesList() {\n  _s();\n  const {\n    query\n  } = useContext(QueryContext);\n  const {\n    movies,\n    isLoading,\n    error\n  } = useMoviesContext(query);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading movies...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 21\n  }, this);\n  if (!movies || movies.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Enter movie you want to watch\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"flex flex-wrap gap-4 justify-center align-top\",\n    children: movies === null || movies === void 0 ? void 0 : movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n      movie: movie\n    }, movie.imdbID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesList, \"8D22arSN9G/TGBDMwArEmZXsWQw=\", true);\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["useContext","QueryContext","useMovies","Movie","jsxDEV","_jsxDEV","MoviesList","_s","query","movies","isLoading","error","useMoviesContext","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","movie","imdbID","_c","$RefreshReg$"],"sources":["/Users/nataliia/Desktop/MoviesNight/movies-night/src/components/MoviesList.jsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { QueryContext } from \"../context/QueryContext\";\nimport { useMovies } from \"../hook/useMovies\";\nimport Movie from \"./Movie\";\n\nfunction MoviesList() {\n  const { query } = useContext(QueryContext);\n  const { movies, isLoading, error } = useMoviesContext(query);\n  if (isLoading) return <p>Loading movies...</p>;\n  if (error) return <p>Error: {error}</p>;\n  if (!movies || movies.length === 0)\n    return <p>Enter movie you want to watch</p>;\n  return (\n    <ul className=\"flex flex-wrap gap-4 justify-center align-top\">\n      {movies?.map((movie) => (\n        <Movie key={movie.imdbID} movie={movie} />\n      ))}\n    </ul>\n  );\n}\n\nexport default MoviesList;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAM,CAAC,GAAGR,UAAU,CAACC,YAAY,CAAC;EAC1C,MAAM;IAAEQ,MAAM;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGC,gBAAgB,CAACJ,KAAK,CAAC;EAC5D,IAAIE,SAAS,EAAE,oBAAOL,OAAA;IAAAQ,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC9C,IAAIN,KAAK,EAAE,oBAAON,OAAA;IAAAQ,QAAA,GAAG,SAAO,EAACF,KAAK;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EACvC,IAAI,CAACR,MAAM,IAAIA,MAAM,CAACS,MAAM,KAAK,CAAC,EAChC,oBAAOb,OAAA;IAAAQ,QAAA,EAAG;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC7C,oBACEZ,OAAA;IAAIc,SAAS,EAAC,+CAA+C;IAAAN,QAAA,EAC1DJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEW,GAAG,CAAEC,KAAK,iBACjBhB,OAAA,CAACF,KAAK;MAAoBkB,KAAK,EAAEA;IAAM,GAA3BA,KAAK,CAACC,MAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACV,EAAA,CAdQD,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AAgBnB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}