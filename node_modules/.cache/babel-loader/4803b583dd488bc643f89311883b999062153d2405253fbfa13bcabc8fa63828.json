{"ast":null,"code":"import{useEffect,useState}from\"react\";const KEY=\"ef5bebce\";export function useMovies(query){const[movies,setMovies]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(\"\");useEffect(function(){const controller=new AbortController();async function fetchMovies(){try{setIsLoading(true);setError(\"\");const res=await fetch(`http://www.omdbapi.com/?i=tt3896198&apikey=${KEY}&s=${query}`,{signal:controller.signal});if(!res.ok)throw new Error(\"Something goes wrong with fetching movies\");const data=await res.json();if(data.Response===\"False\")throw new Error(\"Movie is not found\");setMovies(data.Search);}catch(err){if(err.name!==\"AbortError\"){setError(err.message);}}finally{setIsLoading(false);}}if(query.length<3){setMovies([]);setError(\"\");}fetchMovies();return function(){controller.abort();};},[query]);return{movies,isLoading,error};}","map":{"version":3,"names":["useEffect","useState","KEY","useMovies","query","movies","setMovies","isLoading","setIsLoading","error","setError","controller","AbortController","fetchMovies","res","fetch","signal","ok","Error","data","json","Response","Search","err","name","message","length","abort"],"sources":["/Users/nataliia/Desktop/MoviesNight/movies-night/src/hook/useMovies.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst KEY = \"ef5bebce\";\n\nexport function useMovies(query) {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(\n    function () {\n      const controller = new AbortController();\n      async function fetchMovies() {\n        try {\n          setIsLoading(true);\n          setError(\"\");\n          const res = await fetch(\n            `http://www.omdbapi.com/?i=tt3896198&apikey=${KEY}&s=${query}`,\n            { signal: controller.signal }\n          );\n          if (!res.ok)\n            throw new Error(\"Something goes wrong with fetching movies\");\n\n          const data = await res.json();\n\n          if (data.Response === \"False\") throw new Error(\"Movie is not found\");\n          setMovies(data.Search);\n        } catch (err) {\n          if (err.name !== \"AbortError\") {\n            setError(err.message);\n          }\n        } finally {\n          setIsLoading(false);\n        }\n      }\n      if (query.length < 3) {\n        setMovies([]);\n        setError(\"\");\n      }\n\n      fetchMovies();\n\n      return function () {\n        controller.abort();\n      };\n    },\n    [query]\n  );\n  return { movies, isLoading, error };\n}\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,KAAM,CAAAC,GAAG,CAAG,UAAU,CAEtB,MAAO,SAAS,CAAAC,SAASA,CAACC,KAAK,CAAE,CAC/B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGL,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACM,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CACP,UAAY,CACV,KAAM,CAAAW,UAAU,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACxC,cAAe,CAAAC,WAAWA,CAAA,CAAG,CAC3B,GAAI,CACFL,YAAY,CAAC,IAAI,CAAC,CAClBE,QAAQ,CAAC,EAAE,CAAC,CACZ,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAC,KAAK,CACrB,8CAA8Cb,GAAG,MAAME,KAAK,EAAE,CAC9D,CAAEY,MAAM,CAAEL,UAAU,CAACK,MAAO,CAC9B,CAAC,CACD,GAAI,CAACF,GAAG,CAACG,EAAE,CACT,KAAM,IAAI,CAAAC,KAAK,CAAC,2CAA2C,CAAC,CAE9D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAAC,CAAC,CAE7B,GAAID,IAAI,CAACE,QAAQ,GAAK,OAAO,CAAE,KAAM,IAAI,CAAAH,KAAK,CAAC,oBAAoB,CAAC,CACpEZ,SAAS,CAACa,IAAI,CAACG,MAAM,CAAC,CACxB,CAAE,MAAOC,GAAG,CAAE,CACZ,GAAIA,GAAG,CAACC,IAAI,GAAK,YAAY,CAAE,CAC7Bd,QAAQ,CAACa,GAAG,CAACE,OAAO,CAAC,CACvB,CACF,CAAC,OAAS,CACRjB,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CACA,GAAIJ,KAAK,CAACsB,MAAM,CAAG,CAAC,CAAE,CACpBpB,SAAS,CAAC,EAAE,CAAC,CACbI,QAAQ,CAAC,EAAE,CAAC,CACd,CAEAG,WAAW,CAAC,CAAC,CAEb,MAAO,WAAY,CACjBF,UAAU,CAACgB,KAAK,CAAC,CAAC,CACpB,CAAC,CACH,CAAC,CACD,CAACvB,KAAK,CACR,CAAC,CACD,MAAO,CAAEC,MAAM,CAAEE,SAAS,CAAEE,KAAM,CAAC,CACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}